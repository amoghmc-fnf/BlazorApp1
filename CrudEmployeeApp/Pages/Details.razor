@page "/Details/{id:int}"
@inject NavigationManager nav
@inject IJSRuntime js
@using CrudEmployeeApp.Services;
@inject IEmpService EmpService;
@using CrudEmployeeApp.Models;


@if (selected == null)
{
    <text>Employee is not found!</text>
}
else
{
    <FormControl emp="@selected" ButtonText="Update Changes" Heading="Edit Employee" OnSubmit="@OnUpdate" />
}
@code {
    [Parameter]
    public int id { get; set; }
    private Employee selected { get; set; } = null;

    protected override async Task OnInitializedAsync()
    {
        selected = EmployeeRepo.GetById(id);
    }

    private async Task OnUpdate()
    {
        if (await js.InvokeAsync<bool>("confirm", $"Do you really want to update?"))
        {
            await EmpService.UpdateEmployee(selected);
            nav.NavigateTo("AllEmployees");
        }
        // else
        // {
        //     js.InvokeVoidAsync("alert", $"User has selected to cancel the operation");
        // }
    }
}
